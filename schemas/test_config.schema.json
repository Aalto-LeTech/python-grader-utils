{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/Aalto-LeTech/python-grader-utils/master/schemas/test_config.schema.json",
    "title": "Test config",
    "description": "Graderutils runtime configuration file",
    "type": "object",
    "required": [
        "test_groups"
    ],
    "properties": {
        "test_groups": {
            "description": "Python test modules grouped by different testing charasteristics",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "Test module",
                "type": "object",
                "required": [
                    "module"
                ],
                "properties": {
                    "module": {
                        "description": "Name of an importable Python module that contains at least one unittest.TestCase",
                        "type": "string",
                        "minLength": 1
                    },
                    "display_name": {
                        "description": "Display name for the test group",
                        "type": "string"
                    },
                    "description": {
                        "description": "Short description for the test group",
                        "type": "string"
                    }
                }
            }
        },
        "validation": {
            "title": "Pre-test validation",
            "type": "object",
            "required": [
                "display_name",
                "tasks"
            ],
            "properties": {
                "display_name": {
                    "description": "Name to use for the validation tests, if validation errors occur.",
                    "type": "string",
                    "minLength": 1
                },
                "tasks": {
                    "description": "Validation tasks to run",
                    "type": "array",
                    "items": {
                        "title": "Validation task",
                        "type": "object",
                        "required": [
                            "type",
                            "file"
                        ],
                        "properties": {
                            "type": {
                                "description": "Type of the task",
                                "enum": [
                                    "python_import",
                                    "python_syntax",
                                    "python_blacklist",
                                    "python_whitelist",
                                    "plain_text_blacklist",
                                    "plain_text_whitelist",
                                    "image_type",
                                    "labview",
                                    "xlsm",
                                    "html"
                                ]
                            },
                            "file": {
                                "description": "Filename of the file to be validated.",
                                "type": "string"
                            },
                            "display_name": {
                                "description": "Name of the validation task, e.g. as a requirement: 'The file is a Python module that can be imported'",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description of the validation task if it fails. E.g. when using a syntax blacklist, an explanation why there are blacklisted syntax tokens.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "feedback_template": {
            "title": "Feedback template",
            "description": "Custom Jinja2 template for rendering feedback",
            "type": "string"
        },
        "format_tracebacks": {
            "description": "Options for formatting traceback strings from specific exception classes",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "Traceback config",
                "description": "Configuration for formatting all traceback strings from an exception",
                "type": "object",
                "required": [
                    "class_name"
                ],
                "properties": {
                    "class_name": {
                        "description": "Name of the exception class as it would be catched with the 'except' keyword. E.g. AssertionError.",
                        "type": "string"
                    },
                    "repeating_lines_threshold": {
                        "description": "Minimum amount of consequtive, identical lines or line chunks to enable line collapsing for the repeating range.",
                        "type": "integer",
                        "minimum": 2
                    },
                    "hide_tracebacks": {
                        "description": "Remove all tracebacks",
                        "type": "boolean"
                    },
                    "hide_tracebacks_short_only": {
                        "description": "If hide_tracebacks is given and true, prevent traceback hiding in fullTestOutput strings. Else, this flag is ignored silently.",
                        "type": "boolean"
                    },
                    "hide_tracebacks_replacement": {
                        "description": "If hide_tracebacks is given and true, hidden tracebacks will be replaced with this string. Else, ignore this string. Does not append a newline.",
                        "type": "string",
                        "minLength": 1
                    },
                    "remove_more_sentinel": {
                        "description": "If hide_tracebacks is given and true, continue removing traceback until this sentinel is found. Removes also the sentinel.",
                        "type": "string",
                        "minLength": 1
                    }
                }
            }
        }
    }
}
